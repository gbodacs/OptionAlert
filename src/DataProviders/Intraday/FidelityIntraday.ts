import { Intraday, IntradayData } from "./Intraday";
import logger from "../../Utils/logger";
import { XMLParser, XMLValidator } from "fast-xml-parser";
import { ServerResponse } from "http";
import Global from "../../Global/Global";
import { AxiosResponse } from "axios";
import { getApiCall } from "../GetApiCall";

let testData1 = '<?xml version="1.0" encoding="UTF-8"?><Chart><Symbol><STATUS finestGranularityAllowed="1" finestGranularityExceeded="0" maxYearsAllowed="max" maxYearsExceeded="0"/><DESCRIPTION>SPDR S&amp;P 500 ETF TRUST</DESCRIPTION><SC_CODE>E</SC_CODE><IDENTIFIER>SPY</IDENTIFIER><CUSIP>78462F103</CUSIP><TIMESTAMPS>1662471000 1662471060 1662471120 1662471180 1662471240 1662471300 1662471360 1662471420 1662471480 1662471540 1662471600 1662471660 1662471720 1662471780 1662471840 1662471900 1662471960 1662472020 1662472080 1662472140 1662472200 1662472260 1662472320 1662472380 1662472440 1662472500 1662472560 1662472620 1662472680 1662472740 1662472800 1662472860 1662472920 1662472980 1662473040 1662473100 1662473160 1662473220 1662473280 1662473340 1662473400 1662473460 1662473520 1662473580 1662473640 1662473700 1662473760 1662473820 1662473880 1662473940 1662474000 1662474060 1662474120 1662474180 1662474240 1662474300 1662474360 1662474420 1662474480 1662474540 1662474600 1662474660 1662474720 1662474780 1662474840 1662474900 1662474960 1662475020 1662475080 1662475140 1662475200 1662475260 1662475320 1662475380 1662475440 1662475500 1662475560 1662475620 1662475680 1662475740 1662475800 1662475860 1662475920 1662475980 1662476040 1662476100 1662476160 1662476220 1662476280 1662476340 1662476400 1662476460 1662476520 1662476580 1662476640 1662476700 1662476760 1662476820 1662476880 1662476940 1662477000 1662477060 1662477120 1662477180 1662477240 1662477300 1662477360 1662477420 1662477480 1662477540 1662477600 1662477660 1662477720 1662477780 1662477840 1662477900 1662477960 1662478020 1662478080 1662478140 1662478200 1662478260 1662478320 1662478380 1662478440 1662478500 1662478560 1662478620 1662478680 1662478740 1662478800 1662478860 1662478920 1662478980 1662479040 1662479100 1662479160 1662479220 1662479280 1662479340 1662479400 1662479460 1662479520 1662479580 1662479640 1662479700 1662479760 1662479820 1662479880 1662479940 1662480000 1662480060 1662480120 1662480180 1662480240 1662480300 1662480360 1662480420 1662480480 1662480540 1662480600 1662480660 1662480720 1662480780 1662480840 1662480900 1662480960 1662481020 1662481080 1662481140 1662481200 1662481260 1662481320 1662481380 1662481440 1662481500 1662481560 1662481620 1662481680 1662481740 1662481800 1662481860 1662481920 1662481980 1662482040 1662482100 1662482160 1662482220 1662482280 1662482340 1662482400 1662482460 1662482520 1662482580 1662482640 1662482700 1662482760 1662482820 1662482880 1662482940 1662483000 1662483060 1662483120 1662483180 1662483240 1662483300 1662483360 1662483420 1662483480 1662483540 1662483600 1662483660 1662483720 1662483780 1662483840 1662483900 1662483960 1662484020 1662484080 1662484140 1662484200 1662484260 1662484320 1662484380 1662484440 1662484500 1662484560 1662484620 1662484680 1662484740 1662484800 1662484860 1662484920 1662484980 1662485040 1662485100 1662485160 1662485220 1662485280 1662485340 1662485400 1662485460 1662485520 1662485580 1662485640 1662485700 1662485760 1662485820 1662485880 1662485940 1662486000 1662486060 1662486120 1662486180 1662486240 1662486300 1662486360 1662486420 1662486480 1662486540 1662486600 1662486660 1662486720 1662486780 1662486840 1662486900 1662486960 1662487020 1662487080 1662487140 1662487200 1662487260 1662487320 1662487380 1662487440 1662487500 1662487560 1662487620 1662487680 1662487740 1662487800 1662487860 1662487920 1662487980 1662488040 1662488100 1662488160 1662488220 1662488280 1662488340 1662488400 1662488460 1662488520 1662488580 1662488640 1662488700 1662488760 1662488820 1662488880 1662488940 1662489000 1662489060 1662489120 1662489180 1662489240 1662489300 1662489360 1662489420 1662489480</TIMESTAMPS><VALUES><OPEN>393.13 393.93 393.45 393.38 393.25 393.164 393.375 393.09 393.18 392.6 392.425 392.33 392.45 392.66 392.31 392.31 392.27 391.97 391.65 391.74 391.52 391.33 391.51 391.28 390.81 390.7 390.65 390.63 391.05 391.05 391.65 390.97 389.85 389.3807 389.11 389.58 389.4401 389.23 389.19 389.32 389.34 389.17 389.16 388.44 388.48 389.35 389.29 389.21 388.94 389.27 389.414 389.1463 389.28 389.05 388.98 389.1143 389.5 390.19 390.05 390.3001 390.4 390.0901 389.88 389.99 390.21 390.24 389.9406 389.98 390.11 390.3 391.18 392.005 391.49 391.47 391.66 391.88 391.85 391.7 391.81 391.81 391.74 392.13 392.76 392.96 392.7 392.52 392.82 392.83 393.215 393.33 393.1 392.73 392.73 392.91 392.88 392.9 392.73 393.24 393.3 393.87 393.48 393.06 392.92 392.95 393.29 393.12 392.85 392.67 392.65 392.57 392.54 392.3401 392.65 392.79 392.52 392.8011 392.62 391.94 392.28 392.35 391.99 391.86 392.43 392.67 393.39 392.91 392.71 392.88 392.38 392.38 392.57 392.99 393.47 393.67 393.72 393.26 393.61 393.155 393.15 393.12 392.85 393.16 393.14 393.584 393.5701 393.43 393.58 393.7 393.68 393.62 393.36 393.26 393.24 393.37 393.58 393.3 393.59 393.255 392.85 392.32 392.15 392.15 391.91 392.0 392.1 392.085 391.93 391.21 391.41 391.18 391.21 391.3801 391.2 391.12 391.005 390.77 390.63 390.68 390.97 391.16 391.13 391.22 391.07 391.1032 391.01 390.98 391.14 391.11 391.294 391.06 391.09 390.68 391.23 391.24 391.565 391.8301 391.59 391.71 391.7901 391.78 391.74 391.5911 391.52 391.37 391.4625 391.7 391.69 391.82 392.02 391.63 391.63 391.51 390.94 391.25 390.94 391.06 390.6 390.615 390.16 390.16 389.77 389.86 389.85 389.5161 389.31 389.455 389.35 389.41 389.65 389.59 389.75 389.78 389.53 389.6612 389.82 389.705 389.73 389.47 389.49 389.64 389.53 389.82 390.07 390.2 390.35 390.1501 389.95 389.84 389.92 390.11 390.23 389.96 389.635 389.535 389.57 389.88 389.8301 390.06 389.82 389.58 389.44 389.49 389.3 389.31 389.31 389.63 389.71 390.06 389.98 390.315 390.362 390.67 390.84 390.59 390.54 390.5109 390.4 390.2795 390.58 390.4 390.62 390.91 391.475 391.26 391.44 391.43 391.56 391.29 391.395 391.34 391.41 391.3908 391.23 391.215 391.22 391.33 391.26 391.35 390.9101 391.15 391.06 391.07 390.52 391.02 390.92 390.79 390.6 390.7034 390.74</OPEN><CLOSE>393.93 393.45 393.41 393.285 393.14 393.38 393.12 393.18 392.6085 392.44 392.34 392.42 392.7 392.31 392.29 392.245 391.92 391.66 391.75 391.54 391.36 391.51 391.26 390.81 390.7 390.63 390.63 391.06 391.05 391.64 390.97 389.87 389.39 389.09 389.59 389.48 389.23 389.175 389.3 389.335 389.1651 389.17 388.48 388.4952 389.365 389.29 389.21 388.94 389.29 389.4001 389.16 389.33 389.06 388.96 389.0999 389.5 390.16 390.08 390.3194 390.4101 390.1 389.9 389.97 390.19 390.2392 389.93 389.99 390.11 390.305 391.19 392.005 391.48 391.45 391.6401 391.8701 391.83 391.69 391.795 391.8099 391.7209 392.11 392.7401 392.96 392.7 392.49 392.8 392.82 393.17 393.33 393.11 392.74 392.7799 392.92 392.865 392.915 392.78 393.25 393.27 393.83 393.49 393.075 392.92 392.965 393.3005 393.11 392.86 392.67 392.65 392.58 392.56 392.35 392.63 392.78 392.53 392.805 392.62 391.93 392.28 392.38 392.02 391.8795 392.43 392.68 393.38 392.91 392.7199 392.87 392.35 392.4 392.6399 392.97 393.45 393.66 393.73 393.22 393.59 393.13 393.1 393.12 392.87 393.22 393.125 393.5717 393.59 393.46 393.57 393.71 393.67 393.6 393.38 393.21 393.2431 393.33 393.55 393.25 393.58 393.27 392.845 392.31 392.15 392.15 391.91 392.0099 392.095 392.071 391.92 391.22 391.43 391.18 391.235 391.38 391.2002 391.13 391.0 390.7712 390.63 390.68 390.97 391.15 391.12 391.21 391.075 391.12 391.01 390.9601 391.14 391.11 391.3 391.04 391.085 390.6909 391.225 391.23 391.565 391.8485 391.59 391.69 391.79 391.745 391.7499 391.62 391.505 391.42 391.49 391.7299 391.66 391.8 392.01 391.6301 391.6301 391.53 390.91 391.27 390.94 391.0581 390.605 390.63 390.1977 390.18 389.79 389.85 389.8479 389.5201 389.32 389.4899 389.35 389.42 389.6605 389.61 389.75 389.8 389.53 389.67 389.84 389.7 389.74 389.46 389.4937 389.66 389.54 389.82 390.06 390.17 390.345 390.1522 389.9501 389.8401 389.95 390.1 390.24 389.96 389.65 389.57 389.56 389.8799 389.84 390.11 389.815 389.58 389.46 389.5 389.28 389.33 389.29 389.64 389.7 390.08 389.98 390.32 390.38 390.6851 390.8301 390.61 390.53 390.52 390.41 390.295 390.56 390.41 390.59 390.8991 391.47 391.26 391.4401 391.45 391.56 391.285 391.4 391.33 391.43 391.43 391.25 391.23 391.215 391.33 391.27 391.355 390.91 391.17 391.05 391.08 390.53 391.01 390.91 390.8 390.6 390.732 390.73 391.2</CLOSE><HIGH>394.04 394.12 393.75 393.5 393.3401 393.65 393.485 393.4193 393.32 392.78 392.68 392.47 392.71 392.7 392.38 392.67 392.27 392.09 391.85 391.87 391.71 391.57 391.53 391.28 390.92 390.8 390.72 391.115 391.13 391.77 391.65 390.9999 390.19 389.46 389.66 389.79 389.47 389.53 389.4401 389.55 389.5 389.25 389.28 388.6986 389.43 389.5372 389.38 389.246 389.32 389.54 389.48 389.39 389.35 389.21 389.14 389.52 390.31 390.25 390.37 390.67 390.4334 390.0999 390.1 390.215 390.25 390.39 390.08 390.13 390.32 391.27 392.26 392.04 391.649 391.8099 391.94 392.21 391.87 391.8399 392.0181 391.98 392.2 392.85 393.05 393.19 392.775 392.91 392.959 393.34 393.74 393.45 393.155 392.94 392.95 393.06 393.17 393.14 393.31 393.47 394.05 394.0 393.63 393.11 393.09 393.3005 393.29 393.22 392.9909 392.79 392.9899 392.8077 392.57 392.72 392.88 393.09 392.83 393.14 392.63 392.359 392.47 392.36 392.19 392.43 392.73 393.3897 393.55 393.23 392.99 392.9 392.67 392.74 393.09 393.6275 393.94 393.8 393.72 393.59 393.62 393.29 393.2 393.12 393.22 393.3 393.58 393.68 393.72 393.6399 393.72 393.72 393.72 393.6232 393.47 393.34 393.5 393.66 393.7 393.72 393.6174 393.255 392.85 392.4586 392.26 392.18 392.25 392.1 392.3078 392.1957 391.9801 391.49 391.47 391.44 391.41 391.45 391.31 391.1456 391.005 390.83 390.7 391.07 391.2 391.2396 391.39 391.27 391.23 391.18 391.09 391.175 391.26 391.31 391.35 391.09 391.2 391.26 391.53 391.6 391.86 391.86 391.69 391.91 391.895 391.7901 391.88 391.69 391.6 391.56 391.78 391.9 391.86 392.07 392.02 391.75 391.69 391.59 391.29 391.27 391.0581 391.07 390.77 390.63 390.29 390.17 390.0999 389.93 389.85 389.55 389.54 389.49 389.44 389.73 389.73 389.89 389.99 389.96 389.79 389.84 389.85 389.845 389.83 389.708 389.75 389.74 389.8294';
testData1 += ' 390.08 390.27 390.42 390.42 390.1501 390.08 389.985 390.13 390.38 390.25 389.97 389.67 389.6 389.8799 390.06 390.11 390.21 389.82 389.61 389.6274 389.5 389.49 389.42 389.69 389.82 390.28 390.22 390.37 390.48 390.81 390.8598 390.94 390.71 390.5999 390.58 390.5 390.58 390.615 390.72 390.8991 391.67 391.57 391.5501 391.6201 391.57 391.75 391.48 391.43 391.53 391.5698 391.4883 391.4 391.4 391.33 391.39 391.44 391.35 391.23 391.1795 391.24 391.08 391.13 391.03 390.95 390.86 390.82 390.89 391.31</HIGH><LOW>393.11 393.42 393.36 393.21 393.14 393.04 393.08 393.06 392.58 392.41 392.31 392.2 392.405 392.2772 391.99 392.0 391.82 391.588 391.44 391.52 391.3201 391.265 391.13 390.79 390.66 390.54 390.52 390.61 390.84 391.04 390.92 389.85 389.35 389.06 388.97 389.4 389.195 389.1 389.18 389.13 389.14 388.84 388.45 388.42 388.47 389.15 389.05 388.73 388.81 389.25 389.1 388.98 388.95 388.91 388.62 388.9 389.43 389.96 390.02 390.27 390.09 389.84 389.79 389.89 390.02 389.91 389.67 389.76 389.98 390.3 391.16 391.4536 391.3601 391.45 391.64 391.75 391.44 391.44 391.68 391.71 391.66 392.11 392.59 392.68 392.33 392.5 392.76 392.82 393.2001 393.1099 392.69 392.6401 392.53 392.79 392.8411 392.72 392.73 393.05 393.22 393.42 393.0 392.75 392.82 392.93 392.99 392.86 392.64 392.43 392.58 392.53 392.29 392.27 392.56 392.45 392.39 392.6109 391.89 391.85 392.25 392.02 391.82 391.82 392.42 392.6 392.81 392.665 392.6 392.21 392.2681 392.3 392.43 392.97 393.42 393.5304 393.13 393.2 393.13 392.99 392.78 392.72 392.74 393.0 392.93 393.33 393.37 393.27 393.43 393.46 393.38 393.37 393.17 393.14 393.15 393.37 393.25 393.2404 393.23 392.805 392.28 392.0245 392.0 391.85 391.87 391.93 392.06 391.92 391.17 391.175 391.14 391.17 391.12 391.11 391.08 390.84 390.65 390.55 390.42 390.64 390.957 391.05 391.06 391.07 390.91 390.88 390.85 390.96 391.0 391.03 390.98 390.93 390.65 390.6799 391.21 391.24 391.46 391.56 391.4 391.65 391.7191 391.57 391.55 391.4401 391.19 391.24 391.46 391.56 391.645 391.8 391.56 391.48 391.421 390.87 390.92 390.84 390.84 390.58 390.52 390.1977 390.1399 389.75 389.73 389.78 389.44 389.32 389.29 389.29 389.14 389.41 389.48 389.56 389.69 389.53 389.53 389.59 389.59 389.57 389.45 389.45 389.49 389.49 389.41 389.8 389.98 390.03 390.1522 389.94 389.83 389.8 389.76 390.09 389.95 389.62 389.41 389.41 389.53 389.84 389.8301 389.7701 389.48 389.4 389.32 389.2014 389.26 389.14 389.28 389.63 389.71 389.95 389.96 390.1547 390.22 390.5 390.5 390.43 390.48 390.39 390.24 390.2795 390.38 390.4 390.6 390.89 391.03 391.24 391.35 391.38 391.26 391.2301 391.23 391.28 391.375 391.19 391.15 391.18 391.03 391.22 391.2463 390.91 390.895 390.96 391.04 390.27 390.52 390.72 390.64 390.56 390.53 390.64 390.73</LOW><VOLUME>650811 237239 186105 146625 158031 222291 171079 211963 226898 198115 162996 192015 347770 208979 197374 229040 162811 172094 269646 129403 110637 136395 188945 302878 225233 144921 126186 291363 202041 219042 321907 431007 501715 448289 454522 163808 190440 158523 113742 193761 139891 251524 380580 191077 228626 282498 186920 149592 115899 116617 84273 151225 111500 128342 221161 151615 360374 140109 147257 196175 220634 211504 151954 123951 67737 106506 138199 143891 148538 350877 537001 324663 131748 165887 121336 207994 201770 184741 91180 124080 128528 355960 300924 246121 271782 187589 110193 184852 362467 160736 203578 305406 187878 98157 113815 87917 122521 137105 301015 212462 150715 126179 109081 71984 39313 104228 121006 175260 101795 96469 132832 126656 94415 181683 71205 103560 145768 170844 96975 77527 106777 159580 77360 205730 165865 94732 91155 172153 88771 67614 127114 168449 124473 109873 95929 68728 46037 107733 153701 80595 68695 83955 75529 84659 94758 65209 49959 56272 73416 48502 56040 40578 42482 68053 39791 50196 62696 96175 170237 184286 74601 113694 105785 93558 65291 61224 360718 181544 82627 98255 112053 136873 146744 166212 154599 218064 204128 258073 93889 116382 117238 74632 110537 77387 44967 41840 79972 39079 54342 39374 71619 77120 110948 119868 102336 97105 56914 76917 68932 67720 62072 88676 90982 48010 51260 71970 45850 121712 107779 58832 43083 160051 130305 61289 45422 103412 80880 132740 123727 148047 183886 57398 241475 164763 127886 184860 167085 219651 135087 169612 162535 71099 70592 69965 190601 57226 76861 48162 61850 27280 106036 148724 121311 152803 88279 100173 64112 53703 70305 55770 59646 88449 87255 76363 47615 70882 59624 35671 103937 70620 67515 81240 58907 121143 80385 70983 157421 80870 96677 112801 153965 165092 94854 68999 54720 68763 103828 67846 95190 98405 97254 426408 123214 99519 125774 66212 131445 77482 59054 50151 43330 77232 72581 49490 74356 68112 52732 73181 53532 46839 86245 242798 132127 64909 38016 44206 61051 33746 92594</VOLUME></VALUES><BAR_COUNT X="309"/><SkipCount></SkipCount></Symbol><cvh></cvh><tsvh></tsvh><rh>FMDSNPRTP214.fmr.com</rh></Chart>';
let testData2 = '<?xml version="1.0" encoding="UTF-8"?><Chart><Symbol><STATUS finestGranularityAllowed="1" finestGranularityExceeded="0" maxYearsAllowed="max" maxYearsExceeded="0"/><DESCRIPTION>SPDR S&amp;P 500 ETF TRUST</DESCRIPTION><SC_CODE>E</SC_CODE><IDENTIFIER>SPY</IDENTIFIER><CUSIP>78462F103</CUSIP>';
testData2 += '<TIMESTAMPS>1662489540 1662489600</TIMESTAMPS><VALUES><OPEN>393.13 393.93</OPEN><CLOSE>393.93 393.45</CLOSE><HIGH>394.04 394.12</HIGH><LOW>393.11 393.42</LOW><VOLUME>6508 2372</VOLUME></VALUES><BAR_COUNT X="309"/><SkipCount></SkipCount></Symbol><cvh></cvh><tsvh></tsvh><rh>FMDSNPRTP214.fmr.com</rh></Chart>'

class FidelityIntraday implements Intraday {
  OptionCall = 0;

  toFidelityTimeDateFormat(timestamp: number): string {
    // startDate: '2020/02/27-09:30:00',
    const d = new Date(timestamp * 1000);
    return (
      d.getFullYear() +
      "/" +
      (d.getMonth() + 1).toString().padStart(2, "0") +
      "/" +
      d.getDate().toString().padStart(2, "0") +
      "-" +
      d.getHours().toString().padStart(2, "0") +
      ":" +
      d.getMinutes().toString().padStart(2, "0") +
      ":" +
      d.getSeconds().toString().padStart(2, "0")
    );
  }

  toFidelityTickerFormat(ticker: string): string {
    if (ticker.length > 10) {
      // probably an option ticker? Should convert SPY22072200P385000 -> -SPY220722P385
      // const to = "-SPY220722P385";
      // const from = "SPY22072200P385000";

      let lastChar = ticker.lastIndexOf("P");
      if (lastChar === -1 || lastChar < 7) {
        lastChar = ticker.lastIndexOf("C");
      }

      if (lastChar === -1) return ""; // non-put and non-call?

      const ret1 = ticker.slice(0, lastChar+1);
      const ret2 = +ticker.slice(lastChar+1, ticker.length - 3);

      return "-" + ret1 + ret2.toString();
    } else {
      // probably a non-option ticker?
      return ticker;
    }
  }

  toExplodedArray(in2: string): number[] {
    const temp: string[] = in2.split(" ");
    const ret: number[] = [];
    for (const o of temp) ret.push(Number(o));
    return ret;
  }

  async GetIntradayData(ticker: string, start: number, end: number): Promise<IntradayData | undefined> {
    // Ez igy az egesz napot visszaadja, hiaba egy kis darabot kerek belole
    const options = {
      method: "GET",
      url: "https://fidelity-investments.p.rapidapi.com/quotes/get-chart",
      params: {
        symbol: this.toFidelityTickerFormat(ticker),
        startDate: this.toFidelityTimeDateFormat(start),
        endDate: this.toFidelityTimeDateFormat(end),
        intraday: "Y",
        granularity: "1",
      },
      transformResponse: (res: ServerResponse) => {
        return res;
      },
      headers: {
        "X-RapidAPI-Key": Global.getInstance().getConstManager().getFidelityKey(),
        "X-RapidAPI-Host": Global.getInstance().getConstManager().getFidelityHost(),
      },
    };

    try {
      let resp: AxiosResponse = {status:0, data:"", statusText:"", config: {}, headers:{}};

      if (Global.getInstance().getConstManager().getIsReleaseVersion()) {
        resp = await getApiCall(options.url, options, 4, 1000)
      } else {
        resp.status = 200;
        resp.statusText = "OK";
        if (ticker.length < 4) {
          resp.data = testData1;   // developer version 1
        }
        else {
          if(this.OptionCall === 0) {
            resp.data = testData1;   // developer version 1
            this.OptionCall++;
          } else {
            resp.data = testData2;   // developer version 2
            this.OptionCall++;
          }
        }
      }

      const parser = new XMLParser();
      const valid = XMLValidator.validate(resp.data);
      if (valid !== true) {
        throw new Error("Invalid XML returned from Fidelity");
      }
      const respObj = parser.parse(resp.data);

      if (respObj.Chart.Symbol.Error !== undefined) {
        throw new Error(respObj.Chart.Symbol.Error.TEXT + " Ticker: " + respObj.Chart.Symbol.IDENTIFIER);
      }

      if (resp.status === 200) {
        const ret: IntradayData = {
          timestamp: this.toExplodedArray(respObj.Chart.Symbol.TIMESTAMPS),
          close: this.toExplodedArray(respObj.Chart.Symbol.VALUES.CLOSE),
          open: this.toExplodedArray(respObj.Chart.Symbol.VALUES.OPEN),
          low: this.toExplodedArray(respObj.Chart.Symbol.VALUES.LOW),
          high: this.toExplodedArray(respObj.Chart.Symbol.VALUES.HIGH),
          volume: this.toExplodedArray(respObj.Chart.Symbol.VALUES.VOLUME),
        };
        return ret;
      }
      throw new Error("Fidelity response status is not 200 - " + resp.toString());
    } catch (error) {
      let message;
      if (error instanceof Error) message = error.message;
      else message = String(error);
      logger.error("Error getting Fidelity intraday chart data: " + message);
      return;
    }
  }
}

export default FidelityIntraday;



